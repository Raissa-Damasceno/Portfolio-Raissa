{"ast":null,"code":"import { TOTAL_SCREENS } from \"./commonUtils\";\nimport { Subject } from \"rxjs\";\nimport { Object } from \"prop-types\";\nexport default class ScrollService {\n  constructor() {\n    this.scrollToHireMe = () => {\n      let contactMeScreen = document.getElementById(\"Contact Me\");\n      if (!contactMeScreen) return;\n      contactMeScreen.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.scrollToHome = () => {\n      let homeScreen = document.getElementById(\"Home\");\n      if (!homeScreen) return;\n      homeScreen.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.isElementInView = (elem, type) => {\n      let rec = elem.getBoundingClientRect();\n      let elementTop = rec.top;\n      let elementBottom = rec.Bottom;\n      let partiallyVisible = elementTop < window.innerHeight && elementBottom >= 0;\n      let completelyVisible = elementTop >= 0 && elementBottom <= window.innerHeight;\n\n      switch (type) {\n        case \"partial\":\n          return partiallyVisible;\n\n        case \"complete\":\n          return completelyVisible;\n\n        default:\n          return false;\n      }\n    };\n\n    this.checkCurrentScreenUnderViewport = event => {\n      if (!event || Object.keys(event).length < 1) return;\n\n      for (let screen of TOTAL_SCREENS) {\n        let screenFromDom = document.getElementsById(screen.screen_name);\n        if (!screenFromDom) continue;\n        let fullyVisible = this.isElementInView(screenFromDom, \"complete\");\n        let partiallyVisible = this.isElementInView(screenFromDom, \"partial\");\n\n        if (fullyVisible || partiallyVisible) {\n          if (partiallyVisible && !screen.alreadyRendered) {\n            ScrollService.currentScreenFadeIn.next({\n              fadeInScreen: screen.screen_name\n            });\n            screen[\"alreadyRendered\"] = true;\n            break;\n          }\n\n          if (fullyVisible) {\n            ScrollService.currentScreenBroadCaster.next({\n              screenInView: screen.screen_name\n            });\n            break;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", this.checkCurrentScreenUnderViewport);\n  }\n\n}\nScrollService.scrollHandler = new ScrollService();\nScrollService.currentScreenBroadCaster = new Subject();\nScrollService.currentScreenFadeIn = new Subject();","map":{"version":3,"names":["TOTAL_SCREENS","Subject","Object","ScrollService","constructor","scrollToHireMe","contactMeScreen","document","getElementById","scrollIntoView","behavior","scrollToHome","homeScreen","isElementInView","elem","type","rec","getBoundingClientRect","elementTop","top","elementBottom","Bottom","partiallyVisible","window","innerHeight","completelyVisible","checkCurrentScreenUnderViewport","event","keys","length","screen","screenFromDom","getElementsById","screen_name","fullyVisible","alreadyRendered","currentScreenFadeIn","next","fadeInScreen","currentScreenBroadCaster","screenInView","addEventListener","scrollHandler"],"sources":["/Users/raissadamasceno/Desktop/Portfólio/client/src/Components/utilities/ScrollService.js"],"sourcesContent":["import { TOTAL_SCREENS } from \"./commonUtils\";\nimport { Subject } from \"rxjs\";\nimport { Object } from \"prop-types\";\n\nexport default class ScrollService {\n  static scrollHandler = new ScrollService();\n\n  static currentScreenBroadCaster = new Subject();\n  static currentScreenFadeIn = new Subject();\n\n  constructor() {\n    window.addEventListener(\"scroll\", this.checkCurrentScreenUnderViewport);\n  }\n  scrollToHireMe = () => {\n    let contactMeScreen = document.getElementById(\"Contact Me\");\n    if (!contactMeScreen) return;\n    contactMeScreen.scrollIntoView({ behavior: \"smooth\" });\n  };\n  scrollToHome = () => {\n    let homeScreen = document.getElementById(\"Home\");\n    if (!homeScreen) return;\n    homeScreen.scrollIntoView({ behavior: \"smooth\" });\n  };\n  isElementInView = (elem, type) => {\n    let rec = elem.getBoundingClientRect();\n    let elementTop = rec.top;\n    let elementBottom = rec.Bottom;\n\n    let partiallyVisible =\n      elementTop < window.innerHeight && elementBottom >= 0;\n    let completelyVisible =\n      elementTop >= 0 && elementBottom <= window.innerHeight;\n\n    switch (type) {\n      case \"partial\":\n        return partiallyVisible;\n\n      case \"complete\":\n        return completelyVisible;\n      default:\n        return false;\n    }\n  };\n\n  checkCurrentScreenUnderViewport = (event) => {\n    if (!event || Object.keys(event).length < 1) return;\n    for (let screen of TOTAL_SCREENS) {\n      let screenFromDom = document.getElementsById(screen.screen_name);\n      if (!screenFromDom) continue;\n\n      let fullyVisible = this.isElementInView(screenFromDom, \"complete\");\n      let partiallyVisible = this.isElementInView(screenFromDom, \"partial\");\n\n      if (fullyVisible || partiallyVisible) {\n        if (partiallyVisible && !screen.alreadyRendered) {\n          ScrollService.currentScreenFadeIn.next({\n            fadeInScreen: screen.screen_name,\n          });\n          screen[\"alreadyRendered\"] = true;\n          break;\n        }\n        if (fullyVisible) {\n          ScrollService.currentScreenBroadCaster.next({\n            screenInView: screen.screen_name,\n          });\n          break;\n        }\n      }\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,eAAe,MAAMC,aAAN,CAAoB;EAMjCC,WAAW,GAAG;IAAA,KAGdC,cAHc,GAGG,MAAM;MACrB,IAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAtB;MACA,IAAI,CAACF,eAAL,EAAsB;MACtBA,eAAe,CAACG,cAAhB,CAA+B;QAAEC,QAAQ,EAAE;MAAZ,CAA/B;IACD,CAPa;;IAAA,KAQdC,YARc,GAQC,MAAM;MACnB,IAAIC,UAAU,GAAGL,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjB;MACA,IAAI,CAACI,UAAL,EAAiB;MACjBA,UAAU,CAACH,cAAX,CAA0B;QAAEC,QAAQ,EAAE;MAAZ,CAA1B;IACD,CAZa;;IAAA,KAadG,eAbc,GAaI,CAACC,IAAD,EAAOC,IAAP,KAAgB;MAChC,IAAIC,GAAG,GAAGF,IAAI,CAACG,qBAAL,EAAV;MACA,IAAIC,UAAU,GAAGF,GAAG,CAACG,GAArB;MACA,IAAIC,aAAa,GAAGJ,GAAG,CAACK,MAAxB;MAEA,IAAIC,gBAAgB,GAClBJ,UAAU,GAAGK,MAAM,CAACC,WAApB,IAAmCJ,aAAa,IAAI,CADtD;MAEA,IAAIK,iBAAiB,GACnBP,UAAU,IAAI,CAAd,IAAmBE,aAAa,IAAIG,MAAM,CAACC,WAD7C;;MAGA,QAAQT,IAAR;QACE,KAAK,SAAL;UACE,OAAOO,gBAAP;;QAEF,KAAK,UAAL;UACE,OAAOG,iBAAP;;QACF;UACE,OAAO,KAAP;MAPJ;IASD,CAhCa;;IAAA,KAkCdC,+BAlCc,GAkCqBC,KAAD,IAAW;MAC3C,IAAI,CAACA,KAAD,IAAUzB,MAAM,CAAC0B,IAAP,CAAYD,KAAZ,EAAmBE,MAAnB,GAA4B,CAA1C,EAA6C;;MAC7C,KAAK,IAAIC,MAAT,IAAmB9B,aAAnB,EAAkC;QAChC,IAAI+B,aAAa,GAAGxB,QAAQ,CAACyB,eAAT,CAAyBF,MAAM,CAACG,WAAhC,CAApB;QACA,IAAI,CAACF,aAAL,EAAoB;QAEpB,IAAIG,YAAY,GAAG,KAAKrB,eAAL,CAAqBkB,aAArB,EAAoC,UAApC,CAAnB;QACA,IAAIT,gBAAgB,GAAG,KAAKT,eAAL,CAAqBkB,aAArB,EAAoC,SAApC,CAAvB;;QAEA,IAAIG,YAAY,IAAIZ,gBAApB,EAAsC;UACpC,IAAIA,gBAAgB,IAAI,CAACQ,MAAM,CAACK,eAAhC,EAAiD;YAC/ChC,aAAa,CAACiC,mBAAd,CAAkCC,IAAlC,CAAuC;cACrCC,YAAY,EAAER,MAAM,CAACG;YADgB,CAAvC;YAGAH,MAAM,CAAC,iBAAD,CAAN,GAA4B,IAA5B;YACA;UACD;;UACD,IAAII,YAAJ,EAAkB;YAChB/B,aAAa,CAACoC,wBAAd,CAAuCF,IAAvC,CAA4C;cAC1CG,YAAY,EAAEV,MAAM,CAACG;YADqB,CAA5C;YAGA;UACD;QACF;MACF;IACF,CA3Da;;IACZV,MAAM,CAACkB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKf,+BAAvC;EACD;;AARgC;AAAdvB,a,CACZuC,a,GAAgB,IAAIvC,aAAJ,E;AADJA,a,CAGZoC,wB,GAA2B,IAAItC,OAAJ,E;AAHfE,a,CAIZiC,mB,GAAsB,IAAInC,OAAJ,E"},"metadata":{},"sourceType":"module"}